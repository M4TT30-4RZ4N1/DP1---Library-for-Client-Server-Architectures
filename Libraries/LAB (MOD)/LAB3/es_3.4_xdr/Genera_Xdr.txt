1)  types.x : nome del file con la struttura
2)  rpcgen -o types.c -c types.x  # generate types.c
3)  rpcgen -h types.h -h types.x  # generate types.h
4)  #include "types.h" (client e server)


1)   La struttura si chiama Request !!!

	enum operation { ENC = 0, DEC = 1 };
   	struct Request { operation op; float data<>; };

4)      Ogni metodo si basa sulla Request !!!

	#include "types.h"
	int main(...) {...
	XDR xdrs; 
	float *v = malloc(...); 
	Request req;
	xdrmem_create(&xdrs, buf, BUFSIZE, XDR_ENCODE);
	// Fill up structure:
	req.op = ENC; 
	req.data_len = mylen; 
	req.data_val = v;
	if (!xdr_Request(&xdrs, &req)) { printf("Error"); }
	send(sock, buf, xdr_getpos(&xdrs), 0);
	... }


Devo capire quali funzioni sono chiamate all'interno di altre.
E quale funzione Ã¨ quella madre di tutte che chiama tutti (es. xdr_message).
